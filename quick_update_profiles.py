#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π —Å –≥–µ–æ–º–µ—Ç–∫–æ–π.
–ó–∞–º–µ–Ω—è–µ—Ç —Å–∏–º–≤–æ–ª "üìç" –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç is_shared_location = True.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from sqlalchemy import func, select
from sqlalchemy.ext.asyncio import AsyncSession

from database.connect import async_session
from database.models.profile import ProfileModel
from utils.geopy import get_city_name
from utils.logging import logger


async def quick_update():
    """–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π —Å —Å–∏–º–≤–æ–ª–æ–º 'üìç'"""

    print("üöÄ –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π —Å –≥–µ–æ–º–µ—Ç–∫–æ–π...")
    print("=" * 50)

    async with async_session() as session:
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            stmt = select(ProfileModel).where(ProfileModel.city.contains("üìç"))
            result = await session.execute(stmt)
            profiles = result.scalars().all()

            if not profiles:
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª–∏ —Å —Å–∏–º–≤–æ–ª–æ–º 'üìç' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
                return

            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(profiles)}")
            print()

            updated_cities = 0
            updated_flags = 0
            failed_geocoding = 0

            for i, profile in enumerate(profiles, 1):
                print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø—Ä–æ—Ñ–∏–ª—å {i}/{len(profiles)} (ID: {profile.id})")

                try:
                    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
                    city_name = get_city_name(profile.latitude, profile.longitude)

                    old_city = profile.city
                    old_flag = profile.is_shared_location

                    if city_name:
                        profile.city = city_name
                        updated_cities += 1
                        print(f"   ‚úÖ –ì–æ—Ä–æ–¥: '{old_city}' ‚Üí '{city_name}'")
                    else:
                        failed_geocoding += 1
                        print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")

                    # –í—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
                    if not old_flag:
                        profile.is_shared_location = True
                        updated_flags += 1
                        print(f"   ‚úÖ –§–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {old_flag} ‚Üí True")
                    else:
                        print(f"   ‚ÑπÔ∏è –§–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                    failed_geocoding += 1

                print()

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            await session.commit()

            # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
            print("=" * 50)
            print("üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
            print(f"üìä –ò—Ç–æ–≥–∏:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(profiles)}")
            print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≥–æ—Ä–æ–¥–æ–≤: {updated_cities}")
            print(f"   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ñ–ª–∞–≥–æ–≤ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {updated_flags}")
            if failed_geocoding > 0:
                print(f"   ‚Ä¢ –û—à–∏–±–æ–∫ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {failed_geocoding}")

            logger.log(
                "SCRIPT",
                f"–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {updated_cities} –≥–æ—Ä–æ–¥–æ–≤, "
                f"{updated_flags} —Ñ–ª–∞–≥–æ–≤, {failed_geocoding} –æ—à–∏–±–æ–∫",
            )

        except Exception as e:
            await session.rollback()
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
            raise


async def show_preview():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ"""

    print("üëÄ –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –ü–†–û–°–ú–û–¢–†")
    print("=" * 50)

    async with async_session() as session:
        try:
            stmt = select(ProfileModel).where(ProfileModel.city.contains("üìç"))
            result = await session.execute(stmt)
            profiles = result.scalars().all()

            if not profiles:
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª–∏ —Å —Å–∏–º–≤–æ–ª–æ–º 'üìç' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            print(f"üìä –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(profiles)}\n")

            will_update_cities = 0
            will_update_flags = 0

            for i, profile in enumerate(profiles, 1):
                print(f"{i}. –ü—Ä–æ—Ñ–∏–ª—å ID: {profile.id}")
                print(f"   –¢–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥: '{profile.city}'")
                print(f"   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({profile.latitude}, {profile.longitude})")
                print(f"   –§–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {profile.is_shared_location}")

                try:
                    city_name = get_city_name(profile.latitude, profile.longitude)
                    if city_name:
                        print(f"   ‚úÖ –ù–æ–≤—ã–π –≥–æ—Ä–æ–¥: '{city_name}'")
                        will_update_cities += 1
                    else:
                        print(f"   ‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è")
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

                if not profile.is_shared_location:
                    print(f"   ‚úÖ –§–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ True")
                    will_update_flags += 1
                else:
                    print(f"   ‚ÑπÔ∏è –§–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

                print()

            print("=" * 50)
            print(f"üìä –ò–¢–û–ì–û –ë–£–î–ï–¢ –û–ë–ù–û–í–õ–ï–ù–û:")
            print(f"   ‚Ä¢ –ì–æ—Ä–æ–¥–æ–≤: {will_update_cities}")
            print(f"   ‚Ä¢ –§–ª–∞–≥–æ–≤ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {will_update_flags}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ: {e}")
            raise


def print_help():
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("""
üöÄ –ë–´–°–¢–†–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–§–ò–õ–ï–ô –° –ì–ï–û–ú–ï–¢–ö–û–ô

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python quick_update_profiles.py [–∫–æ–º–∞–Ω–¥–∞]

–ö–æ–º–∞–Ω–¥—ã:
    run        - –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–≥–æ—Ä–æ–¥ + —Ñ–ª–∞–≥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏)
    preview    - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π
    help       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    python quick_update_profiles.py preview
    python quick_update_profiles.py run

–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:
    1. –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Å —Å–∏–º–≤–æ–ª–æ–º "üìç" –≤ –ø–æ–ª–µ city
    2. –ó–∞–º–µ–Ω—è–µ—Ç —Å–∏–º–≤–æ–ª –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (—á–µ—Ä–µ–∑ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ)
    3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ is_shared_location = True
    4. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–º–∞–Ω–¥–∞ 'run' —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤!
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'preview' –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
    """)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    if len(sys.argv) < 2:
        print_help()
        return

    command = sys.argv[1].lower()

    if command == "preview":
        await show_preview()

    elif command == "run":
        await quick_update()

    elif command == "help":
        print_help()

    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'help' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
